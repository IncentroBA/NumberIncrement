import { useState, useEffect, createElement } from 'react';
import Big from 'big.js';

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') {
    return;
  }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".number-widget {\n    display: grid;\n    flex: 1;\n    grid-auto-flow: column;\n    grid-auto-columns: 1fr auto auto;\n    position: relative;\n}\n\n.number-widget .form-control {\n    grid-area: 1 / 1 / 1 / 3;\n    padding-right: 55px;\n}\n\n.number-widget .form-control.has-type {\n    border-bottom-right-radius: 0;\n    border-top-right-radius: 0;\n}\n\n.number-widget input::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n\n.number-widget input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n\n.number-widget input {\n    -moz-appearance: textfield;\n}\n\n.number-widget-buttons {\n    grid-area: 1 / -1 / 1 / 3;\n    margin: 6px;\n    place-self: end;\n}\n\n.number-widget .increment {\n    margin-right: 4px;\n}\n\n.number-widget .increment,\n.number-widget .decrement {\n    border: solid 1px var(--input-border, #cdcdcd);\n    border-radius: 4px;\n    background-color: white;\n    padding: 2px 8px;\n}\n\n.number-widget .increment:hover,\n.number-widget .decrement:hover {\n    border-color: var(--brand-primary, #ffa500);\n}\n\n.number-widget .number-widget-type {\n    background-color: white;\n    border: solid 1px var(--input-border, #cdcdcd);\n    border-left: 0;\n    border-radius: 0 4px 4px 0;\n    padding: 8px;\n}\n\n.number-widget .form-control-static {\n    border: solid 1px transparent;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk51bWJlckluY3JlbWVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsT0FBTztJQUNQLHNCQUFzQjtJQUN0QixnQ0FBZ0M7SUFDaEMsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLDZCQUE2QjtJQUM3QiwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSx3QkFBd0I7SUFDeEIsU0FBUztBQUNiOztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLDBCQUEwQjtBQUM5Qjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTs7SUFFSSw4Q0FBOEM7SUFDOUMsa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2QixnQkFBZ0I7QUFDcEI7O0FBRUE7O0lBRUksMkNBQTJDO0FBQy9DOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLDhDQUE4QztJQUM5QyxjQUFjO0lBQ2QsMEJBQTBCO0lBQzFCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakMiLCJmaWxlIjoiTnVtYmVySW5jcmVtZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5udW1iZXItd2lkZ2V0IHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGZsZXg6IDE7XG4gICAgZ3JpZC1hdXRvLWZsb3c6IGNvbHVtbjtcbiAgICBncmlkLWF1dG8tY29sdW1uczogMWZyIGF1dG8gYXV0bztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5udW1iZXItd2lkZ2V0IC5mb3JtLWNvbnRyb2wge1xuICAgIGdyaWQtYXJlYTogMSAvIDEgLyAxIC8gMztcbiAgICBwYWRkaW5nLXJpZ2h0OiA1NXB4O1xufVxuXG4ubnVtYmVyLXdpZGdldCAuZm9ybS1jb250cm9sLmhhcy10eXBlIHtcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcbn1cblxuLm51bWJlci13aWRnZXQgaW5wdXQ6Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG59XG5cbi5udW1iZXItd2lkZ2V0IGlucHV0Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xufVxuXG4ubnVtYmVyLXdpZGdldCBpbnB1dCB7XG4gICAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG59XG5cbi5udW1iZXItd2lkZ2V0LWJ1dHRvbnMge1xuICAgIGdyaWQtYXJlYTogMSAvIC0xIC8gMSAvIDM7XG4gICAgbWFyZ2luOiA2cHg7XG4gICAgcGxhY2Utc2VsZjogZW5kO1xufVxuXG4ubnVtYmVyLXdpZGdldCAuaW5jcmVtZW50IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDRweDtcbn1cblxuLm51bWJlci13aWRnZXQgLmluY3JlbWVudCxcbi5udW1iZXItd2lkZ2V0IC5kZWNyZW1lbnQge1xuICAgIGJvcmRlcjogc29saWQgMXB4IHZhcigtLWlucHV0LWJvcmRlciwgI2NkY2RjZCk7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDJweCA4cHg7XG59XG5cbi5udW1iZXItd2lkZ2V0IC5pbmNyZW1lbnQ6aG92ZXIsXG4ubnVtYmVyLXdpZGdldCAuZGVjcmVtZW50OmhvdmVyIHtcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWJyYW5kLXByaW1hcnksICNmZmE1MDApO1xufVxuXG4ubnVtYmVyLXdpZGdldCAubnVtYmVyLXdpZGdldC10eXBlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXI6IHNvbGlkIDFweCB2YXIoLS1pbnB1dC1ib3JkZXIsICNjZGNkY2QpO1xuICAgIGJvcmRlci1sZWZ0OiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDAgNHB4IDRweCAwO1xuICAgIHBhZGRpbmc6IDhweDtcbn1cblxuLm51bWJlci13aWRnZXQgLmZvcm0tY29udHJvbC1zdGF0aWMge1xuICAgIGJvcmRlcjogc29saWQgMXB4IHRyYW5zcGFyZW50O1xufVxuIl19 */";
styleInject(css_248z);

function NumberIncrement({
  interval,
  inputAttr,
  inputType,
  maxNumber,
  minNumber,
  onChange,
  readOnlyStyle,
  ...rest
}) {
  const id = rest.id || "";
  const style = rest.class || "";
  const widgetName = rest.name || "";
  const stepInterval = Number(interval);
  const [currentValue, setCurrentValue] = useState(null);
  const [disabledValue, setDisabledValue] = useState(false);
  useEffect(() => {
    if (inputAttr.status === "available" && currentValue === null) {
      setCurrentValue(Number(inputAttr.displayValue));
    } else if (currentValue) {
      inputAttr.setValue(Big(currentValue));
    }

    if (inputAttr.status === "available" && inputAttr.readOnly === true) {
      setDisabledValue(true);
    }
  }, [currentValue, inputAttr]);

  function handleOnChange() {
    if (onChange && onChange.canExecute) {
      onChange.execute();
    }
  }

  function onChangeInput(event) {
    if (event.target.value >= maxNumber) {
      setCurrentValue(maxNumber);
      inputAttr.setValue(Big(maxNumber));
    } else if (event.target.value <= minNumber) {
      setCurrentValue(minNumber);
      inputAttr.setValue(Big(minNumber));
    } else {
      setCurrentValue(Number(event.target.value));
    }

    handleOnChange();
  }

  function onIncrement() {
    if (currentValue + stepInterval >= maxNumber) {
      setCurrentValue(maxNumber);
    } else {
      setCurrentValue(currentValue + stepInterval);
    }

    handleOnChange();
  }

  function onDecrement() {
    if (currentValue - stepInterval <= minNumber) {
      setCurrentValue(minNumber);
      inputAttr.setValue(Big(minNumber));
    } else {
      setCurrentValue(currentValue - stepInterval);
      inputAttr.setValue(Big(currentValue - stepInterval));
    }

    handleOnChange();
  }

  if (disabledValue && disabledValue === true && readOnlyStyle === "text") {
    return createElement("div", {
      className: `number-widget ${style}`
    }, createElement("p", {
      className: `${widgetName} form-control-static`
    }, currentValue, inputType));
  } else {
    return createElement("div", {
      className: `number-widget ${style}`
    }, createElement("input", {
      id: id,
      className: `${widgetName} form-control ${inputType && "has-type"}`,
      type: "number",
      onChange: onChangeInput,
      value: currentValue,
      disabled: disabledValue
    }), createElement("div", {
      className: "number-widget-buttons"
    }, disabledValue === false && createElement("button", {
      className: "increment",
      onClick: onIncrement,
      tabIndex: "-1"
    }, "+"), disabledValue === false && createElement("button", {
      className: "decrement",
      onClick: onDecrement,
      tabIndex: "-1"
    }, "-")), inputType && createElement("div", {
      className: "number-widget-type"
    }, inputType));
  }
}

export { NumberIncrement as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
